{"ast":null,"code":"import { SimpleChanges, ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"contentParagraph\"];\nconst _c1 = [\"heading\"];\nconst _c2 = [\"*\"];\nexport let ServerElementComponent = /*#__PURE__*/(() => {\n  class ServerElementComponent {\n    constructor() {\n      console.log('constructor called!');\n    }\n    ngOnChanges(changes) {\n      console.log('ngOnChanges called!');\n      console.log(changes);\n    }\n    ngOnInit() {\n      console.log('ngOnInit called!');\n      console.log('Text Content: ' + this.header.nativeElement.textContent);\n      console.log('Text Content of paragraph: ' + this.paragraph.nativeElement.textContent);\n    }\n    ngDoCheck() {\n      console.log('ngDoCheck called!');\n    }\n    ngAfterContentInit() {\n      console.log('ngAfterContentInit called!');\n      console.log('Text Content of paragraph: ' + this.paragraph.nativeElement.textContent);\n    }\n    ngAfterContentChecked() {\n      console.log('ngAfterContentChecked called!');\n    }\n    ngAfterViewInit() {\n      console.log('ngAfterViewInit called!');\n      console.log('Text Content: ' + this.header.nativeElement.textContent);\n    }\n    ngAfterViewChecked() {\n      console.log('ngAfterViewChecked called!');\n    }\n    ngOnDestroy() {\n      console.log('ngOnDestroy called!');\n    }\n    static #_ = this.ɵfac = function ServerElementComponent_Factory(t) {\n      return new (t || ServerElementComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ServerElementComponent,\n      selectors: [[\"app-server-element\"]],\n      contentQueries: function ServerElementComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paragraph = _t.first);\n        }\n      },\n      viewQuery: function ServerElementComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        }\n      },\n      inputs: {\n        element: [\"srvElement\", \"element\"],\n        name: \"name\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c2,\n      decls: 6,\n      vars: 1,\n      consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [\"heading\", \"\"], [1, \"panel-body\"]],\n      template: function ServerElementComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵprojection(5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.name);\n        }\n      },\n      styles: [\"p[_ngcontent-%COMP%]{color:#00f}label[_ngcontent-%COMP%]{color:red}\"]\n    });\n  }\n  return ServerElementComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}